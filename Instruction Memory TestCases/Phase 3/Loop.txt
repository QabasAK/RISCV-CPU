module instruction_memory(clk, address, read_data);
  input clk;
  input [31:0] address;
  output reg [31:0] read_data;
  
  reg [7:0] memory [16383:0];
  
  initial 
    begin      
      memory[0]<=8'h1b;
      memory[1]<=8'h82;
      memory[2]<=8'hf0;
      memory[3]<=8'h7f;
      
      memory[4]<=8'h63;
      memory[5]<=8'h98;
      memory[6]<=8'h04;
      memory[7]<=8'h00;
      
      memory[8]<=8'h9b;
      memory[9]<=8'h80;
      memory[10]<=8'h10;
      memory[11]<=8'h00;
      
      memory[12]<=8'h33;
      memory[13]<=8'h61;
      memory[14]<=8'h11;
      memory[15]<=8'h00;
      
      memory[16]<=8'he3;
      memory[17]<=8'h1a;
      memory[18]<=8'h00;
      memory[19]<=8'hfe;
      
      memory[20]<=8'h9b;
      memory[21]<=8'h81;
      memory[22]<=8'h11;
      memory[23]<=8'h02;      
    end
  
  always @ (posedge clk)
    begin 
      read_data<={memory[address+3],memory[address+2],memory[address+1],memory[address]};
    end 

endmodule // instruction_memory